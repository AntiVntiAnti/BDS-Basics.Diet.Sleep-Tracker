# Form implementation generated from reading ui file 'BDSguiJuly29.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(279, 305)
        MainWindow.setStyleSheet("QWidget {\n"
"    font: 11pt \"Poppins\";\n"
"    background:#121212;\n"
"    color:rgb(255,255,255);\n"
"}\n"
"/* /////////////////////////////////////////////////////////////////////////////////////////\n"
"TheMinds Labels\n"
"///////////////////////////////////////////////////////////////////////////////////// */\n"
"\n"
"\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QTextEdit\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QTextEdit {\n"
"    border:none;\n"
"    font-size: 12pt;\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QToolTip\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QToolTip {\n"
"    background: rgba(12, 12, 12,50);\n"
"    border: 1px solid  rgb(129, 179, 234);\n"
"    border-radius: 5px;\n"
"    padding:4px;\n"
"    text-align: left;\n"
"    color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QTimeEdit, QDoubleSpinBox, QSpinBox\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QDoubleSpinBox,\n"
"QSpinBox {\n"
"    border:none;\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QLabel\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"    background:transparent;\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QComboBox\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QComboBox {\n"
"    background-color: transparent; border:1px inset rgb(28,32,23); border-radius:2px; padding: 3px;\n"
"}\n"
"\n"
"\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QLineEdit\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"    QLineEdit {\n"
"    border:none;\n"
"    background: transparent;\n"
"}\n"
"QLineEdit:hover {\n"
"    border-bottom:1px solid rgba(123, 123, 123, 150);\n"
"}\n"
"QLineEdit:focus {\n"
"    border-bottom:1px solid rgba(123, 123, 123, 200);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QCheckBox\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QCheckBox::indicator {\n"
"    font-weight:bold;\n"
"    background-color: transparent;\n"
"    border: 2px solid rgb(33,143,109);\n"
"    border-radius: 6px;\n"
"    width: 8px;\n"
"    height: 8px;\n"
"    margin-left:8px;\n"
"    margin-right:8px;\n"
"}\n"
"QCheckBox::indicator:hover {\n"
"    border: 2px solid white;\n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    background: rgb(33,143,109);\n"
"    border: 2px solid rgb(33,143,109);\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"QSlider\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QSlider:horizontal {\n"
"    background:transparent;\n"
"}\n"
"QSlider::groove:horizontal {\n"
"    border:1px inset rgb(22, 22, 44);\n"
"    border-radius: 9px;\n"
"    height: 16px;\n"
"    margin: 0px;\n"
"    background:rgb(22, 22, 22);\n"
"    }\n"
"\n"
"QSlider::groove:horizontal:hover {\n"
"    background: rgb(38, 38, 38);\n"
"    border:1px inset rgb(29, 32, 54);\n"
"}\n"
"QSlider::handle:horizontal {\n"
"    background: rgb(255, 255, 255);\n"
"    height: 16px;\n"
"    width: 16px;\n"
"    margin: 0px;\n"
"    border-radius:8px;\n"
"}\n"
"QSlider::sub-page:horizontal {\n"
"    background:transparent;\n"
"    border-radius:6px;\n"
"}\n"
"QSlider::handle:horizontal:hover {\n"
"    background-color: white;\n"
"}\n"
"QSlider::handle:horizontal:pressed {\n"
"    background-color:white;\n"
"}\n"
"\n"
"/* /////////////////////////////////////////////////////////////////////////////\n"
"Time/DateEdit\n"
"///////////////////////////////////////////////////////////////////////////// */\n"
"QTimeEdit,\n"
"QDateEdit {\n"
"    background-color: transparent;\n"
"    border:None;\n"
"}\n"
"\n"
"/* //////////////////////////////////////////////////////////////////////////////\n"
"QTableView\n"
"////////////////////////////////////////////////////////////////////////////// */\n"
"QTableView {\n"
"    background-color: transparent;\n"
"    alternate-background-color: rgb(101, 147, 128);\n"
"    selection-background-color: #7e57c2;\n"
"    gridline-color: rgb(90, 90, 90);color:rgb(245,245,245);\n"
"}\n"
"\n"
"QTableView::item {\n"
"    padding: 1px;\n"
"    background:rgb(216,79,79);\n"
"}\n"
"QTableView::item:selected {\n"
"    color: #fff;\n"
"    background:rgb(23, 23, 23);\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n"
"                                                                                                                                     BASICS MOD\n"
"////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  */\n"
"#sleep_table,\n"
"#basics_table {background-color: transparent;alternate-background-color: rgb(100, 157, 220);selection-background-color: #7e57c2;gridline-color:transparent;color:rgb(245,245,245);}\n"
"#sleep_table::item,\n"
"#basics_table::item {padding: 1px;background:rgb(36, 143, 109);}\n"
"#sleep_table::item:selected,\n"
"#basics_table::item:selected {color: #fff;background:rgb(23, 23, 23);}\n"
"\n"
"#notes_basics {border:1px solid rgb(54, 163, 129);     border-radius:6px;     padding:4px 5px;     color:rgb(54, 163, 129);}\n"
"#notes_basics:focus {color:rgb(84, 193, 159);     border:1px solid rgb(84, 193, 159);}\n"
"#notes_basics:hover {color:rgb(73,183,149);     border-color:rgb(73,183,149);}\n"
"\n"
"#sleep_commit_btn,\n"
"#basics_commit_btn {border:none;image: url(:/icons/UpdatedIcons/basics_c_norm.png);max-width:21px;min-width:21px;max-height:21px;min-height:21px;}\n"
"#sleep_commit_btn:hover,\n"
"#basics_commit_btn:hover {image: url(:/icons/UpdatedIcons/bas_com_norm.png);}\n"
"#sleep_commit_btn:pressed,\n"
"#basics_commit_btn:pressed {image: url(:/icons/UpdatedIcons/bas_com_press.png);}\n"
"#sleep_delete_btn,\n"
"#basics_delete_btn {border:none;image: url(:/icons/UpdatedIcons/basics_d_norm.png);max-width:25px;min-width:25px;max-height:25px;min-height:25px;}\n"
"#sleep_delete_btn:hover,\n"
"#basics_delete_btn:hover {image: url(:/icons/UpdatedIcons/bas_del_norm.png);}\n"
"#sleep_delete_btn:pressed,\n"
"#basics_delete_btn:pressed {image: url(:/icons/UpdatedIcons/bas_dele_press.png);}\n"
"\n"
"#basics_data_btn {image: url(:/newPrefix/body_data_btn_norm.png);}\n"
"#basics_data_btn:hover {image: url(:/icons/body_hover.png);}\n"
"#basics_data_btn:checked {image: url(:/icons/body_checked.png);}\n"
"#basics_data_btn:checked:hover {image: url(:/icons/body_hover.png);}\n"
"\n"
"#sleep_data_btn {border:none;image: url(:/icons/UpdatedIcons/sleep_norm.png);max-width:35px;min-width:35px;max-height:35px;min-height:35px;}\n"
"#sleep_data_btn:hover {image: url(:/icons/UpdatedIcons/sleep_hover.png);}\n"
"#sleep_data_btn:pressed {image: url(:/icons/UpdatedIcons/sleep_press.png);}\n"
"#sleep_data_btn:checked {image: url(:/icons/UpdatedIcons/sleep_checked.png);}\n"
"#sleep_data_btn:checked:hover {image: url(:/icons/UpdatedIcons/sleep_hover.png);}\n"
"#sleep_data_btn:checked:pressed {image: url(:/icons/UpdatedIcons/sleep_norm.png);}\n"
"\n"
"#woke_up_like_spinbox, #sleep_quality, #effort_spinbox {\n"
"font-size:10pt;\n"
"background:transparent;\n"
"}\n"
"#woke_up_like_spinbox:hover, #sleep_quality:hover, #effort_spinbox:hover {\n"
"background:transparent;\n"
"color:rgb(33, 143, 109);\n"
"}\n"
"\n"
"#basics_basics_frame > QCheckBox {\n"
"    background:transparent;\n"
"    font-size:10pt;\n"
"}\n"
"#basics_basics_frame > QCheckBox:hover {\n"
"    background:transparent;\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#basics_basics_frame > QCheckBox::indicator {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    border-radius: 5px;\n"
"}\n"
"#yoga_effort_lbl, #awake_lbl, #sleep_lbl, #sleep_quality_lbl, #woke_like_lbl, #hrs_slept_lbl, #bedtime_lbl {color:#fff;}\n"
"#yoga_effort_lbl:hover, #awake_lbl:hover, #sleep_lbl:hover, #sleep_quality_lbl:hover, #woke_like_lbl:hover, #hrs_slept_lbl:hover, #bedtime_lbl:hover {color:rgb(34, 143, 109);}\n"
"#basics_basics_frame > QCheckBox::indicator:hover {\n"
"    border: 2px solid rgb(245, 245, 245);\n"
"}\n"
"#basics_basics_frame > QCheckBox::indicator:checked {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    background: rgb(33, 143, 109);\n"
"}\n"
"/* BASICS MOD  QTimeEdit\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_basics_frame >QTimeEdit {\n"
"    background-color: transparent;\n"
"}\n"
"#basics_basics_frame >QTimeEdit:hover {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#basics_basics_frame >QTimeEdit:focus {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#time_goal_timer,\n"
"#awake_time,\n"
"#asleep_time,\n"
"#shower_time,\n"
"#teeth_brushed_at_time_2,\n"
"#teeth_brushed_at_time,\n"
"#yoga_time_entry {\n"
"color:rgb(33, 143, 109);\n"
"background:transparent;\n"
"}\n"
"\n"
"#time_goal_timer:hover,\n"
"#awake_time:hover,\n"
"#asleep_time:hover,\n"
"#shower_time:hover,\n"
"#teeth_brushed_at_time_2:hover,\n"
"#teeth_brushed_at_time:hover,\n"
"#yoga_time_entry:hover {\n"
"color:rgb(63, 173, 139);\n"
"}\n"
"#time_goal_timer:focus,\n"
"#awake_time:focus,\n"
"#asleep_time:focus,\n"
"#shower_time:focus,\n"
"#teeth_brushed_at_time_2:focus,\n"
"#teeth_brushed_at_time:focus,\n"
"#yoga_time_entry:focus {\n"
"color:rgb(255, 255, 255);\n"
"}\n"
"\n"
"\n"
"#sleep_date,  #basics_date {color:rgb(33, 143, 109);}\n"
"#sleep_date:hover, #basics_date:hover {color:rgb(34, 143, 109);}\n"
"#sleep_date:focus, #basics_date:focus {color::rgb(54, 163, 129);}\n"
"\n"
"/*  BASICS MOD QCheckBox\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_sleep_frame > QCheckBox,\n"
"#basics_basics_frame > QCheckBox {\n"
"    background:transparent;\n"
"    font-size:10pt;\n"
"}\n"
"#basics_sleep_frame > QCheckBox:hover,\n"
"#basics_basics_frame > QCheckBox:hover {\n"
"    background:transparent;\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#basics_sleep_frame > QCheckBox::indicator,\n"
"#basics_basics_frame > QCheckBox::indicator {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    border-radius: 5px;\n"
"}\n"
"#basics_sleep_frame > QCheckBox::indicator:hover,\n"
"#basics_basics_frame > QCheckBox::indicator:hover {\n"
"    border: 2px solid rgb(245, 245, 245);\n"
"}\n"
"#basics_sleep_frame > QCheckBox::indicator:checked,\n"
"#basics_basics_frame > QCheckBox::indicator:checked {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    background: rgb(33, 143, 109);\n"
"}\n"
"/* BASICS MOD QTimeEdit\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_commit_pane > QDateEdit,\n"
"#basics_sleep_frame > QTimeEdit,\n"
"#basics_basics_frame > QTimeEdit {\n"
"    background-color: transparent;\n"
"}\n"
"#basics_commit_pane > QDateEdit:hover,\n"
"#basics_sleep_frame > QTimeEdit:hover,\n"
"#basics_basics_frame > QTimeEdit:hover {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"#basics_commit_pane > QDateEdit:focus,\n"
"#basics_sleep_frame > QTimeEdit:focus,\n"
"#basics_basics_frame > QTimeEdit:focus {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"\n"
"\n"
"\n"
"/* QLabel\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_sleep_frame > QLabel,\n"
"#basics_basics_frame > QLabel {\n"
"    background-color: transparent;\n"
"    font-size:10pt;\n"
"}\n"
"\n"
"#basics_sleep_frame > QLabel:hover,\n"
"#basics_basics_frame > QLabel:hover {\n"
"    color:rgb(33, 143, 109);\n"
"}\n"
"\n"
"/* QSpinBox\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"#basics_sleep_frame > QSpinBox,\n"
"#basics_basics_frame > QSpinBox {\n"
"background:transparent;\n"
"}\n"
"\n"
"#basics_sleep_frame > QSpinBox:hover,\n"
"#basics_basics_frame > QSpinBox:hover {\n"
"background:transparent;\n"
"color:rgb(33, 143, 109);\n"
"}\n"
"\n"
"#basics_sleep_frame > QSpinBox:indicator,\n"
"#basics_basics_frame > QSpinBox:indicator {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    width: 7px;\n"
"    height: 7px;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"#basics_sleep_frame > QSpinBox::indicator:hover,\n"
"#basics_basics_frame > QSpinBox::indicator:hover {\n"
"    border: 2px solid rgb(245, 245, 245);\n"
"}\n"
"\n"
"#basics_sleep_frame > QSpinBox::indicator:checked,\n"
"#basics_basics_frame > QSpinBox::indicator:checked {\n"
"    border: 2px solid rgb(33, 143, 109);\n"
"    background: 2px solid rgb(33, 143, 109);\n"
"}\n"
"\n"
"\n"
"\n"
"/* ////////////////////////////////////////////////////////////////////////////////////////////////\n"
"                                    QScrollBar\n"
"//////////////////////////////////////////////////////////////////////////////////////////////// */\n"
"QScrollBar:horizontal {border: none;background:transparent;height: 12px;margin: 0px 10px 0px 10px;border-radius: 3px;}\n"
"QScrollBar::handle:horizontal {background: rgb(35,35,37);min-width:24px;border-radius: 4px}\n"
"QScrollBar::add-line:horizontal {border: none;background: transparent;width: 20px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;subcontrol-position: right;subcontrol-origin: margin;}\n"
"QScrollBar::sub-line:horizontal {border: none;background: transparent;width: 20px;border-top-left-radius: 4px;border-bottom-left-radius: 4px;subcontrol-position: left;subcontrol-origin: margin;}\n"
"QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal {background: none;}\n"
"QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {background: transparent;}\n"
"QScrollBar:vertical {border: none;background-color:transparent;width: 12px;margin: 10px 0px 10px 0px;border-radius: 4px;}\n"
"QScrollBar::handle:vertical {background: rgb(35,35,37);min-height: 12px;border-radius: 4px}\n"
"QScrollBar::add-line:vertical {border: none;background: transparent;height: 20px;border-bottom-left-radius: 4px;border-bottom-right-radius: 4px;subcontrol-position: bottom;subcontrol-origin: margin;}\n"
"QScrollBar::sub-line:vertical {border: none;background: transparent;height: 20px;border-top-left-radius: 4px;border-top-right-radius: 4px;subcontrol-position: top;subcontrol-origin: margin;}\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {background: none;}\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {background: transparent;}\n"
"\n"
"\n"
"\n"
"")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.basics_stack = QtWidgets.QStackedWidget(parent=self.centralwidget)
        self.basics_stack.setObjectName("basics_stack")
        self.input = QtWidgets.QWidget()
        self.input.setObjectName("input")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.input)
        self.verticalLayout_2.setContentsMargins(8, 8, 8, 8)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame = QtWidgets.QFrame(parent=self.input)
        self.frame.setObjectName("frame")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.frame1 = QtWidgets.QFrame(parent=self.frame)
        self.frame1.setMinimumSize(QtCore.QSize(245, 0))
        self.frame1.setObjectName("frame1")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame1)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame2 = QtWidgets.QFrame(parent=self.frame1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame2.sizePolicy().hasHeightForWidth())
        self.frame2.setSizePolicy(sizePolicy)
        self.frame2.setObjectName("frame2")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame2)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 4)
        self.gridLayout_9.setHorizontalSpacing(6)
        self.gridLayout_9.setVerticalSpacing(3)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.time_awake = QtWidgets.QTimeEdit(parent=self.frame2)
        self.time_awake.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QTimeEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QTimeEdit {color:rgb(132,127,239);}\n"
"QTimeEdit:hover {color: rgb(152,147,255);}\n"
"QTimeEdit:focus {color: rgb(172,167,255);}\n"
"")
        self.time_awake.setFrame(False)
        self.time_awake.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.time_awake.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.time_awake.setObjectName("time_awake")
        self.gridLayout_9.addWidget(self.time_awake, 1, 2, 1, 1, QtCore.Qt.AlignmentFlag.AlignRight)
        self.woke_like_lbl = QtWidgets.QLabel(parent=self.frame2)
        self.woke_like_lbl.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.woke_like_lbl.setObjectName("woke_like_lbl")
        self.gridLayout_9.addWidget(self.woke_like_lbl, 4, 0, 1, 1)
        self.sleep_quality_slider = QtWidgets.QSlider(parent=self.frame2)
        self.sleep_quality_slider.setMinimumSize(QtCore.QSize(0, 17))
        self.sleep_quality_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSlider Colors\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    \n"
"    QSlider::handle:horizontal {background:rgb(132,127,239);}\n"
"    QSlider::handle:horizontal:hover {background:rgb(162,157,255);}\n"
"    QSlider::handle:horizontal:pressed {background:rgb(112,107,219);}\n"
"    QSlider::groove:horizontal:hover {background:rgba(132,127,239,0.35);}\n"
"    QSlider::groove:horizontal {background:rgba(132,127,239,0.15);}\n"
"\n"
"    ")
        self.sleep_quality_slider.setMaximum(10)
        self.sleep_quality_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.sleep_quality_slider.setObjectName("sleep_quality_slider")
        self.gridLayout_9.addWidget(self.sleep_quality_slider, 3, 2, 1, 1)
        self.woke_up_like_slider = QtWidgets.QSlider(parent=self.frame2)
        self.woke_up_like_slider.setMinimumSize(QtCore.QSize(0, 17))
        self.woke_up_like_slider.setStyleSheet("\n"
"    /* ///////////////////////////////////////////////////////////////\n"
"    QSlider Colors\n"
"    /////////////////////////////////////////////////////////////// */\n"
"    \n"
"    QSlider::handle:horizontal {background:rgb(132,127,239);}\n"
"    QSlider::handle:horizontal:hover {background:rgb(162,157,255);}\n"
"    QSlider::handle:horizontal:pressed {background:rgb(112,107,219);}\n"
"    QSlider::groove:horizontal:hover {background:rgba(132,127,239,0.35);}\n"
"    QSlider::groove:horizontal {background:rgba(132,127,239,0.15);}\n"
"\n"
"    ")
        self.woke_up_like_slider.setMaximum(10)
        self.woke_up_like_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.woke_up_like_slider.setObjectName("woke_up_like_slider")
        self.gridLayout_9.addWidget(self.woke_up_like_slider, 4, 2, 1, 1)
        self.sleep_quality_lbl = QtWidgets.QLabel(parent=self.frame2)
        self.sleep_quality_lbl.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.sleep_quality_lbl.setObjectName("sleep_quality_lbl")
        self.gridLayout_9.addWidget(self.sleep_quality_lbl, 3, 0, 1, 1)
        self.sleep_quality = QtWidgets.QSpinBox(parent=self.frame2)
        self.sleep_quality.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSpinBox\n"
"/////////////////////////////////////////////////////////////// */\n"
"QSpinBox {color:rgb(132,127,239);}\n"
"QSpinBox:hover {color: rgb(192,187,255);}\n"
"QSpinBox:focus {color: rgb(162,157,255);}\n"
"")
        self.sleep_quality.setFrame(False)
        self.sleep_quality.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.sleep_quality.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.sleep_quality.setSuffix("")
        self.sleep_quality.setMinimum(0)
        self.sleep_quality.setMaximum(10)
        self.sleep_quality.setObjectName("sleep_quality")
        self.gridLayout_9.addWidget(self.sleep_quality, 3, 1, 1, 1)
        self.total_hours_slept = QtWidgets.QLineEdit(parent=self.frame2)
        self.total_hours_slept.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QTimeEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLineEdit {color:rgb(132,127,239);border:none;}\n"
"QLineEdit:hover {color: rgb(152,147,255);border:none;}\n"
"QLineEdit:focus {color: rgb(172,167,255);border:none;}\n"
"")
        self.total_hours_slept.setFrame(False)
        self.total_hours_slept.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.total_hours_slept.setObjectName("total_hours_slept")
        self.gridLayout_9.addWidget(self.total_hours_slept, 2, 2, 1, 1)
        self.woke_up_like = QtWidgets.QSpinBox(parent=self.frame2)
        self.woke_up_like.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QSpinBox\n"
"/////////////////////////////////////////////////////////////// */\n"
"QSpinBox {color:rgb(132,127,239);}\n"
"QSpinBox:hover {color: rgb(192,187,255);}\n"
"QSpinBox:focus {color: rgb(162,157,255);}\n"
"")
        self.woke_up_like.setFrame(False)
        self.woke_up_like.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.woke_up_like.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.woke_up_like.setSuffix("")
        self.woke_up_like.setMinimum(0)
        self.woke_up_like.setMaximum(10)
        self.woke_up_like.setObjectName("woke_up_like")
        self.gridLayout_9.addWidget(self.woke_up_like, 4, 1, 1, 1)
        self.time_asleep = QtWidgets.QTimeEdit(parent=self.frame2)
        self.time_asleep.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QTimeEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QTimeEdit {color:rgb(132,127,239);}\n"
"QTimeEdit:hover {color: rgb(152,147,255);}\n"
"QTimeEdit:focus {color: rgb(172,167,255);}\n"
"")
        self.time_asleep.setFrame(False)
        self.time_asleep.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.time_asleep.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.time_asleep.setObjectName("time_asleep")
        self.gridLayout_9.addWidget(self.time_asleep, 0, 2, 1, 1, QtCore.Qt.AlignmentFlag.AlignRight)
        self.label = QtWidgets.QLabel(parent=self.frame2)
        self.label.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.label.setObjectName("label")
        self.gridLayout_9.addWidget(self.label, 0, 0, 1, 2)
        self.label_2 = QtWidgets.QLabel(parent=self.frame2)
        self.label_2.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.label_2.setObjectName("label_2")
        self.gridLayout_9.addWidget(self.label_2, 1, 0, 1, 2)
        self.label_3 = QtWidgets.QLabel(parent=self.frame2)
        self.label_3.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QLabel\n"
"/////////////////////////////////////////////////////////////// */\n"
"QLabel {\n"
"font-weight:300;\n"
"    color: rgb(132, 127, 239);\n"
"}\n"
"QLabel:hover {\n"
"    color: rgb(162, 157, 255);\n"
"}\n"
"")
        self.label_3.setObjectName("label_3")
        self.gridLayout_9.addWidget(self.label_3, 2, 0, 1, 2)
        self.verticalLayout.addWidget(self.frame2)
        self.diet_input_frame = QtWidgets.QFrame(parent=self.frame1)
        self.diet_input_frame.setObjectName("diet_input_frame")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.diet_input_frame)
        self.gridLayout_12.setContentsMargins(4, 4, 4, 4)
        self.gridLayout_12.setHorizontalSpacing(0)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.frame_2 = QtWidgets.QFrame(parent=self.diet_input_frame)
        self.frame_2.setStyleSheet("QFrame {background: transparent;}\n"
"QPushButton {\n"
"color:rgb(90,98,200);\n"
"font-weight:bold;\n"
"font-size:8pt;\n"
"border-radius: 17px;\n"
"padding: 6px;\n"
"min-width: 20px;\n"
"max-width: 20px;\n"
"min-height: 20px;\n"
"max-height: 20px;\n"
"border:2px solid rgb(90,98,200);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"color: rgb(62, 59, 120);\n"
"margin-top:1px;\n"
"margin-left:1px;\n"
"border-color:rgb(120,128,230);\n"
"background-color: rgb(120,128,230);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"color: transparent;\n"
"image: url(:/newPrefix/drankydrankChunks.png);\n"
"margin: 0px;\n"
"padding:0px;\n"
"border-color:rgb(90,98,200);\n"
"background-color: rgb(90,98,200);\n"
"/*background-color: rgb(40,48,150);*/\n"
"}        ")
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setHorizontalSpacing(9)
        self.gridLayout_10.setVerticalSpacing(0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem, 0, 8, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem1, 0, 0, 1, 1)
        self.twenty_four_ounce_cup = QtWidgets.QPushButton(parent=self.frame_2)
        self.twenty_four_ounce_cup.setObjectName("twenty_four_ounce_cup")
        self.gridLayout_10.addWidget(self.twenty_four_ounce_cup, 0, 5, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem2, 0, 4, 1, 1)
        self.sixteen_ounce_cup = QtWidgets.QPushButton(parent=self.frame_2)
        self.sixteen_ounce_cup.setObjectName("sixteen_ounce_cup")
        self.gridLayout_10.addWidget(self.sixteen_ounce_cup, 0, 3, 1, 1)
        self.eight_ounce_cup = QtWidgets.QPushButton(parent=self.frame_2)
        self.eight_ounce_cup.setStyleSheet("")
        self.eight_ounce_cup.setObjectName("eight_ounce_cup")
        self.gridLayout_10.addWidget(self.eight_ounce_cup, 0, 1, 1, 1)
        self.thirty_two_ounce_cup = QtWidgets.QPushButton(parent=self.frame_2)
        self.thirty_two_ounce_cup.setObjectName("thirty_two_ounce_cup")
        self.gridLayout_10.addWidget(self.thirty_two_ounce_cup, 0, 7, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem3, 0, 2, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_10.addItem(spacerItem4, 0, 6, 1, 1)
        self.gridLayout_12.addWidget(self.frame_2, 2, 0, 1, 2)
        self.calories = QtWidgets.QSpinBox(parent=self.diet_input_frame)
        self.calories.setMaximumSize(QtCore.QSize(45, 16777215))
        self.calories.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QTimeEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QSpinBox {color:rgb(132,127,239);}\n"
"QSpinBox:hover {color: rgb(152,147,255);}\n"
"QSpinBox:focus {color: rgb(172,167,255);}\n"
"")
        self.calories.setFrame(False)
        self.calories.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.calories.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.calories.setMaximum(2000)
        self.calories.setSingleStep(10)
        self.calories.setObjectName("calories")
        self.gridLayout_12.addWidget(self.calories, 0, 1, 1, 1)
        self.food_eaten = QtWidgets.QLineEdit(parent=self.diet_input_frame)
        self.food_eaten.setMinimumSize(QtCore.QSize(155, 0))
        self.food_eaten.setStyleSheet("QLineEdit {\n"
"    border:none;\n"
"    font-size:12pt;\n"
"font-weight:12;\n"
"    color: rgb(133, 125, 239);\n"
"    background: transparent;\n"
"}\n"
"QLineEdit:hover {\n"
"border:none;\n"
"}\n"
"QLineEdit:focus {\n"
"border:none;\n"
"}\n"
"")
        self.food_eaten.setFrame(False)
        self.food_eaten.setClearButtonEnabled(True)
        self.food_eaten.setObjectName("food_eaten")
        self.gridLayout_12.addWidget(self.food_eaten, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.diet_input_frame)
        self.commit_container = QtWidgets.QFrame(parent=self.frame1)
        self.commit_container.setStyleSheet("QPushButton {\n"
"color: rgb(33,143,109);\n"
"font-size:9pt;\n"
"padding:4px;\n"
"border-radius: 30px;\n"
"min-width: 40px;\n"
"max-width: 40px;\n"
"min-height: 40px;\n"
"max-height: 40px;\n"
"border:6px solid rgb(33,143,109);\n"
"}\n"
"QPushButton:hover {\n"
"color:rgb(13,123,89);\n"
"padding:4px;\n"
"background-color: rgb(73,183,149);\n"
"border:6px solid rgb(73,183,149);\n"
"}\n"
"QPushButton:pressed {\n"
"color: #fff;\n"
"font-weight:bold;\n"
"padding:4px;\n"
"background-color:rgb(13, 123, 83);\n"
"border:6px solid rgb(13, 123, 83);\n"
"}")
        self.commit_container.setObjectName("commit_container")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.commit_container)
        self.horizontalLayout.setContentsMargins(0, 8, 0, 0)
        self.horizontalLayout.setSpacing(12)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem5)
        self.shower_c = QtWidgets.QPushButton(parent=self.commit_container)
        self.shower_c.setStyleSheet("QPushButton {\n"
"image:url(:/newPrefix/shower.png);\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"image: url(:/newPrefix/showerHover.png);\n"
"\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"\n"
"image:url(:/newPrefix/Mac App icon 30.png);\n"
"\n"
"}        \n"
"")
        self.shower_c.setText("")
        self.shower_c.setIconSize(QtCore.QSize(24, 24))
        self.shower_c.setCheckable(False)
        self.shower_c.setFlat(True)
        self.shower_c.setObjectName("shower_c")
        self.horizontalLayout.addWidget(self.shower_c)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem6)
        self.teeth_commit = QtWidgets.QPushButton(parent=self.commit_container)
        self.teeth_commit.setStyleSheet("QPushButton {\n"
"image:url(:/newPrefix/teeth.png);\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"image:url(:/newPrefix/teethHover.png);\n"
"\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"\n"
"image:url(:/newPrefix/teethPressed.png);\n"
"\n"
"}        \n"
"")
        self.teeth_commit.setText("")
        self.teeth_commit.setIconSize(QtCore.QSize(24, 24))
        self.teeth_commit.setCheckable(False)
        self.teeth_commit.setFlat(True)
        self.teeth_commit.setObjectName("teeth_commit")
        self.horizontalLayout.addWidget(self.teeth_commit)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem7)
        self.yoga_commit = QtWidgets.QPushButton(parent=self.commit_container)
        self.yoga_commit.setStyleSheet("QPushButton {\n"
"image:url(:/newPrefix/yogasd.png);\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"image: url(:/newPrefix/yogaHover.png);\n"
"\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"\n"
"image:url(:/newPrefix/basics2Wh.png);\n"
"\n"
"}        \n"
"\n"
"")
        self.yoga_commit.setText("")
        self.yoga_commit.setIconSize(QtCore.QSize(24, 24))
        self.yoga_commit.setCheckable(False)
        self.yoga_commit.setFlat(True)
        self.yoga_commit.setObjectName("yoga_commit")
        self.horizontalLayout.addWidget(self.yoga_commit)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem8)
        self.verticalLayout.addWidget(self.commit_container)
        self.hide_check_frame = QtWidgets.QFrame(parent=self.frame1)
        self.hide_check_frame.setObjectName("hide_check_frame")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.hide_check_frame)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 8)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.shower_check = QtWidgets.QCheckBox(parent=self.hide_check_frame)
        self.shower_check.setText("")
        self.shower_check.setObjectName("shower_check")
        self.horizontalLayout_2.addWidget(self.shower_check)
        self.tooth_check = QtWidgets.QCheckBox(parent=self.hide_check_frame)
        self.tooth_check.setText("")
        self.tooth_check.setObjectName("tooth_check")
        self.horizontalLayout_2.addWidget(self.tooth_check)
        self.exerc_check = QtWidgets.QCheckBox(parent=self.hide_check_frame)
        self.exerc_check.setText("")
        self.exerc_check.setObjectName("exerc_check")
        self.horizontalLayout_2.addWidget(self.exerc_check)
        self.verticalLayout.addWidget(self.hide_check_frame)
        spacerItem9 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem9)
        self.horizontalLayout_3.addWidget(self.frame1)
        self.verticalLayout_2.addWidget(self.frame)
        self.basics_stack.addWidget(self.input)
        self.sleepPage = QtWidgets.QWidget()
        self.sleepPage.setObjectName("sleepPage")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.sleepPage)
        self.gridLayout_11.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_11.setSpacing(0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.sleepPage)
        self.tabWidget.setStyleSheet("QTabWidget {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;    background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"}\n"
"\n"
"\n"
"QTabBar::tab:hover {\n"
"    color: #fff;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
"background-color: #121212;\n"
"}\n"
"")
        self.tabWidget.setIconSize(QtCore.QSize(24, 24))
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.tab_4)
        self.gridLayout_14.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_14.setSpacing(0)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.sleep_tableview = QtWidgets.QTableView(parent=self.tab_4)
        self.sleep_tableview.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(62,67,144);\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(132,127,239);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.sleep_tableview.setShowGrid(False)
        self.sleep_tableview.setSortingEnabled(True)
        self.sleep_tableview.setObjectName("sleep_tableview")
        self.sleep_tableview.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_14.addWidget(self.sleep_tableview, 0, 0, 1, 1)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/sleepsa.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/sleeps.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget.addTab(self.tab_4, icon, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.tab_5)
        self.gridLayout_15.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_15.setSpacing(0)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.total_hours_slept_tableview = QtWidgets.QTableView(parent=self.tab_5)
        self.total_hours_slept_tableview.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(62,67,144);\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(132,127,239);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.total_hours_slept_tableview.setShowGrid(False)
        self.total_hours_slept_tableview.setSortingEnabled(True)
        self.total_hours_slept_tableview.setObjectName("total_hours_slept_tableview")
        self.total_hours_slept_tableview.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_15.addWidget(self.total_hours_slept_tableview, 0, 0, 1, 1)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/sleepsad.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/sleeeppp.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget.addTab(self.tab_5, icon1, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.tab_6)
        self.gridLayout_16.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_16.setSpacing(0)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.woke_up_like_tableview = QtWidgets.QTableView(parent=self.tab_6)
        self.woke_up_like_tableview.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(62,67,144);\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(132,127,239);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.woke_up_like_tableview.setShowGrid(False)
        self.woke_up_like_tableview.setSortingEnabled(True)
        self.woke_up_like_tableview.setObjectName("woke_up_like_tableview")
        self.woke_up_like_tableview.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_16.addWidget(self.woke_up_like_tableview, 0, 0, 1, 1)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/newPrefix/wokeUp.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon2.addPixmap(QtGui.QPixmap(":/newPrefix/wakeuipss.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget.addTab(self.tab_6, icon2, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.tab_7)
        self.gridLayout_17.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_17.setSpacing(0)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.sleep_quality_tableview = QtWidgets.QTableView(parent=self.tab_7)
        self.sleep_quality_tableview.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(62,67,144);\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(132,127,239);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.sleep_quality_tableview.setShowGrid(False)
        self.sleep_quality_tableview.setSortingEnabled(True)
        self.sleep_quality_tableview.setObjectName("sleep_quality_tableview")
        self.sleep_quality_tableview.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_17.addWidget(self.sleep_quality_tableview, 0, 0, 1, 1)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/slapsQWualt.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/kjhjkhlkhkl.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget.addTab(self.tab_7, icon3, "")
        self.gridLayout_11.addWidget(self.tabWidget, 0, 0, 1, 1)
        self.basics_stack.addWidget(self.sleepPage)
        self.dietPage = QtWidgets.QWidget()
        self.dietPage.setObjectName("dietPage")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.dietPage)
        self.gridLayout_19.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_19.setSpacing(0)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.tabWidget_2 = QtWidgets.QTabWidget(parent=self.dietPage)
        self.tabWidget_2.setStyleSheet("QTabWidget {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;    background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: #121212;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"     background-color: #121212;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
"    padding: 2px;    background-color: #121212;\n"
"}\n"
"")
        self.tabWidget_2.setIconSize(QtCore.QSize(22, 22))
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.tab_8)
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_13.setSpacing(0)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.diet_table = QtWidgets.QTableView(parent=self.tab_8)
        self.diet_table.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(62,67,144);\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(132,127,239);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.diet_table.setShowGrid(False)
        self.diet_table.setSortingEnabled(True)
        self.diet_table.setObjectName("diet_table")
        self.diet_table.horizontalHeader().setCascadingSectionResizes(True)
        self.diet_table.horizontalHeader().setDefaultSectionSize(150)
        self.diet_table.horizontalHeader().setMinimumSectionSize(50)
        self.diet_table.horizontalHeader().setStretchLastSection(True)
        self.diet_table.verticalHeader().setCascadingSectionResizes(True)
        self.gridLayout_13.addWidget(self.diet_table, 0, 0, 1, 1)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/newPrefix/sdfsdetaco.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon4.addPixmap(QtGui.QPixmap(":/newPrefix/takeeeestqa.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget_2.addTab(self.tab_8, icon4, "")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.tab_9)
        self.gridLayout_18.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_18.setSpacing(0)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.hydration_table = QtWidgets.QTableView(parent=self.tab_9)
        self.hydration_table.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(62,67,144);\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(132,127,239);\n"
"}\n"
"QTableView::item:selected {\n"
"color: #fff;\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.hydration_table.setShowGrid(False)
        self.hydration_table.setSortingEnabled(True)
        self.hydration_table.setObjectName("hydration_table")
        self.hydration_table.horizontalHeader().setCascadingSectionResizes(True)
        self.hydration_table.horizontalHeader().setDefaultSectionSize(150)
        self.hydration_table.horizontalHeader().setMinimumSectionSize(50)
        self.hydration_table.horizontalHeader().setStretchLastSection(True)
        self.hydration_table.verticalHeader().setCascadingSectionResizes(True)
        self.gridLayout_18.addWidget(self.hydration_table, 0, 0, 1, 1)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/newPrefix/drankszzhit.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon5.addPixmap(QtGui.QPixmap(":/newPrefix/drankydrankChunks.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.tabWidget_2.addTab(self.tab_9, icon5, "")
        self.gridLayout_19.addWidget(self.tabWidget_2, 0, 0, 1, 1)
        self.basics_stack.addWidget(self.dietPage)
        self.basicsPage = QtWidgets.QWidget()
        self.basicsPage.setObjectName("basicsPage")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.basicsPage)
        self.gridLayout_5.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_5.setSpacing(0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.shower_tab = QtWidgets.QTabWidget(parent=self.basicsPage)
        self.shower_tab.setStyleSheet("QTabWidget {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: transparent;\n"
"    border: none;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    background-color: transparent;\n"
"}\n"
"\n"
"QTabBar::tab:only-one {\n"
"    padding: 2px;\n"
"}\n"
"")
        self.shower_tab.setIconSize(QtCore.QSize(22, 22))
        self.shower_tab.setDocumentMode(False)
        self.shower_tab.setObjectName("shower_tab")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setSpacing(0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.shower_table = QtWidgets.QTableView(parent=self.tab)
        self.shower_table.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(12,65,21);\n"
"\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(33,143,109);\n"
"}\n"
"QTableView::item:selected {\n"
"color:rgb(245,245,245);\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.shower_table.setShowGrid(False)
        self.shower_table.setSortingEnabled(True)
        self.shower_table.setObjectName("shower_table")
        self.shower_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_7.addWidget(self.shower_table, 0, 0, 1, 1)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/newPrefix/shower.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon6.addPixmap(QtGui.QPixmap(":/newPrefix/Mac App icon 31.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.shower_tab.addTab(self.tab, icon6, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setSpacing(0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.teethbrushed_table = QtWidgets.QTableView(parent=self.tab_3)
        self.teethbrushed_table.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(12,65,21);\n"
"\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(33,143,109);\n"
"}\n"
"QTableView::item:selected {\n"
"color:rgb(245,245,245);\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.teethbrushed_table.setShowGrid(False)
        self.teethbrushed_table.setSortingEnabled(True)
        self.teethbrushed_table.setObjectName("teethbrushed_table")
        self.teethbrushed_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_6.addWidget(self.teethbrushed_table, 0, 0, 1, 1)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/newPrefix/teeth.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon7.addPixmap(QtGui.QPixmap(":/newPrefix/teethPressed.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.shower_tab.addTab(self.tab_3, icon7, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setSpacing(0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.yoga_table = QtWidgets.QTableView(parent=self.tab_2)
        self.yoga_table.setStyleSheet("\n"
"QTableView {\n"
"background-color: transparent;\n"
"selection-background-color: #7e57c2;\n"
"gridline-color:transparent;\n"
"color:rgb(12,65,21);\n"
"\n"
"}\n"
"QTableView::item {\n"
"padding: 1px;\n"
"background:rgb(33,143,109);\n"
"}\n"
"QTableView::item:selected {\n"
"color:rgb(245,245,245);\n"
"background:rgb(23, 23, 23);\n"
"}\n"
"    ")
        self.yoga_table.setShowGrid(False)
        self.yoga_table.setSortingEnabled(True)
        self.yoga_table.setObjectName("yoga_table")
        self.yoga_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_8.addWidget(self.yoga_table, 0, 0, 1, 1)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/newPrefix/basicsGR.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon8.addPixmap(QtGui.QPixmap(":/newPrefix/basics2Wh.png"), QtGui.QIcon.Mode.Active, QtGui.QIcon.State.On)
        self.shower_tab.addTab(self.tab_2, icon8, "")
        self.gridLayout_5.addWidget(self.shower_tab, 0, 0, 1, 1)
        self.basics_stack.addWidget(self.basicsPage)
        self.datesandtimes = QtWidgets.QWidget()
        self.datesandtimes.setObjectName("datesandtimes")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.datesandtimes)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setSpacing(0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.basics_date = QtWidgets.QDateEdit(parent=self.datesandtimes)
        self.basics_date.setMinimumDateTime(QtCore.QDateTime(QtCore.QDate(2023, 9, 14), QtCore.QTime(0, 0, 0)))
        self.basics_date.setDate(QtCore.QDate(2023, 9, 14))
        self.basics_date.setObjectName("basics_date")
        self.gridLayout_4.addWidget(self.basics_date, 0, 0, 1, 1)
        self.diet_time = QtWidgets.QTimeEdit(parent=self.datesandtimes)
        self.diet_time.setObjectName("diet_time")
        self.gridLayout_4.addWidget(self.diet_time, 4, 0, 1, 1)
        self.sleep_time = QtWidgets.QTimeEdit(parent=self.datesandtimes)
        self.sleep_time.setObjectName("sleep_time")
        self.gridLayout_4.addWidget(self.sleep_time, 2, 0, 1, 1)
        self.basics_time = QtWidgets.QTimeEdit(parent=self.datesandtimes)
        self.basics_time.setObjectName("basics_time")
        self.gridLayout_4.addWidget(self.basics_time, 5, 0, 1, 1)
        self.sleep_date = QtWidgets.QDateEdit(parent=self.datesandtimes)
        self.sleep_date.setStyleSheet("\n"
"/* ///////////////////////////////////////////////////////////////\n"
"QDateEdit\n"
"/////////////////////////////////////////////////////////////// */\n"
"QDateEdit {color:rgb(132,127,239);}\n"
"QDateEdit:hover {color: rgb(152,147,255);}\n"
"QDateEdit:focus {color: rgb(172,167,255);}\n"
"")
        self.sleep_date.setFrame(False)
        self.sleep_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.sleep_date.setButtonSymbols(QtWidgets.QAbstractSpinBox.ButtonSymbols.NoButtons)
        self.sleep_date.setObjectName("sleep_date")
        self.gridLayout_4.addWidget(self.sleep_date, 1, 0, 1, 1)
        self.diet_date = QtWidgets.QDateEdit(parent=self.datesandtimes)
        self.diet_date.setObjectName("diet_date")
        self.gridLayout_4.addWidget(self.diet_date, 3, 0, 1, 1)
        self.basics_stack.addWidget(self.datesandtimes)
        self.gridLayout.addWidget(self.basics_stack, 0, 0, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 279, 18))
        self.menubar.setObjectName("menubar")
        self.menubasicsMicro = QtWidgets.QMenu(parent=self.menubar)
        self.menubasicsMicro.setObjectName("menubasicsMicro")
        self.menuData = QtWidgets.QMenu(parent=self.menubar)
        self.menuData.setObjectName("menuData")
        self.menuviews = QtWidgets.QMenu(parent=self.menubar)
        self.menuviews.setObjectName("menuviews")
        MainWindow.setMenuBar(self.menubar)
        self.actionDelete = QtGui.QAction(parent=MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.actionCommitSleep = QtGui.QAction(parent=MainWindow)
        self.actionCommitSleep.setObjectName("actionCommitSleep")
        self.actionCommitDiet = QtGui.QAction(parent=MainWindow)
        self.actionCommitDiet.setObjectName("actionCommitDiet")
        self.actionTotalHours = QtGui.QAction(parent=MainWindow)
        self.actionTotalHours.setObjectName("actionTotalHours")
        self.actionShowPageOne = QtGui.QAction(parent=MainWindow)
        self.actionShowPageOne.setObjectName("actionShowPageOne")
        self.actionShowBasicsData = QtGui.QAction(parent=MainWindow)
        self.actionShowBasicsData.setObjectName("actionShowBasicsData")
        self.actionShowSleepData = QtGui.QAction(parent=MainWindow)
        self.actionShowSleepData.setObjectName("actionShowSleepData")
        self.actionShowDietData = QtGui.QAction(parent=MainWindow)
        self.actionShowDietData.setObjectName("actionShowDietData")
        self.menuData.addAction(self.actionDelete)
        self.menuData.addAction(self.actionCommitSleep)
        self.menuData.addAction(self.actionCommitDiet)
        self.menuData.addAction(self.actionTotalHours)
        self.menuviews.addAction(self.actionShowPageOne)
        self.menuviews.addAction(self.actionShowSleepData)
        self.menuviews.addAction(self.actionShowDietData)
        self.menuviews.addAction(self.actionShowBasicsData)
        self.menubar.addAction(self.menubasicsMicro.menuAction())
        self.menubar.addAction(self.menuData.menuAction())
        self.menubar.addAction(self.menuviews.menuAction())

        self.retranslateUi(MainWindow)
        self.basics_stack.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        self.shower_tab.setCurrentIndex(0)
        self.shower_c.clicked.connect(self.shower_check.toggle) # type: ignore
        self.teeth_commit.clicked.connect(self.tooth_check.toggle) # type: ignore
        self.yoga_commit.clicked.connect(self.exerc_check.toggle) # type: ignore
        self.sleep_quality_slider.valueChanged['int'].connect(self.sleep_quality.setValue) # type: ignore
        self.sleep_quality.valueChanged['int'].connect(self.sleep_quality_slider.setValue) # type: ignore
        self.woke_up_like.valueChanged['int'].connect(self.woke_up_like_slider.setValue) # type: ignore
        self.woke_up_like_slider.valueChanged['int'].connect(self.woke_up_like.setValue) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.time_asleep, self.time_awake)
        MainWindow.setTabOrder(self.time_awake, self.sleep_quality)
        MainWindow.setTabOrder(self.sleep_quality, self.woke_up_like)
        MainWindow.setTabOrder(self.woke_up_like, self.food_eaten)
        MainWindow.setTabOrder(self.food_eaten, self.calories)
        MainWindow.setTabOrder(self.calories, self.sleep_quality_slider)
        MainWindow.setTabOrder(self.sleep_quality_slider, self.woke_up_like_slider)
        MainWindow.setTabOrder(self.woke_up_like_slider, self.twenty_four_ounce_cup)
        MainWindow.setTabOrder(self.twenty_four_ounce_cup, self.sixteen_ounce_cup)
        MainWindow.setTabOrder(self.sixteen_ounce_cup, self.eight_ounce_cup)
        MainWindow.setTabOrder(self.eight_ounce_cup, self.thirty_two_ounce_cup)
        MainWindow.setTabOrder(self.thirty_two_ounce_cup, self.total_hours_slept)
        MainWindow.setTabOrder(self.total_hours_slept, self.shower_c)
        MainWindow.setTabOrder(self.shower_c, self.teeth_commit)
        MainWindow.setTabOrder(self.teeth_commit, self.yoga_commit)
        MainWindow.setTabOrder(self.yoga_commit, self.shower_check)
        MainWindow.setTabOrder(self.shower_check, self.tooth_check)
        MainWindow.setTabOrder(self.tooth_check, self.exerc_check)
        MainWindow.setTabOrder(self.exerc_check, self.tabWidget)
        MainWindow.setTabOrder(self.tabWidget, self.sleep_tableview)
        MainWindow.setTabOrder(self.sleep_tableview, self.total_hours_slept_tableview)
        MainWindow.setTabOrder(self.total_hours_slept_tableview, self.woke_up_like_tableview)
        MainWindow.setTabOrder(self.woke_up_like_tableview, self.sleep_quality_tableview)
        MainWindow.setTabOrder(self.sleep_quality_tableview, self.tabWidget_2)
        MainWindow.setTabOrder(self.tabWidget_2, self.diet_table)
        MainWindow.setTabOrder(self.diet_table, self.hydration_table)
        MainWindow.setTabOrder(self.hydration_table, self.shower_tab)
        MainWindow.setTabOrder(self.shower_tab, self.shower_table)
        MainWindow.setTabOrder(self.shower_table, self.teethbrushed_table)
        MainWindow.setTabOrder(self.teethbrushed_table, self.yoga_table)
        MainWindow.setTabOrder(self.yoga_table, self.basics_date)
        MainWindow.setTabOrder(self.basics_date, self.diet_time)
        MainWindow.setTabOrder(self.diet_time, self.sleep_time)
        MainWindow.setTabOrder(self.sleep_time, self.basics_time)
        MainWindow.setTabOrder(self.basics_time, self.sleep_date)
        MainWindow.setTabOrder(self.sleep_date, self.diet_date)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.time_awake.setDisplayFormat(_translate("MainWindow", "hh:mm AP"))
        self.woke_like_lbl.setText(_translate("MainWindow", "woke.up.like"))
        self.sleep_quality_lbl.setText(_translate("MainWindow", "sleep.quality"))
        self.total_hours_slept.setText(_translate("MainWindow", "⌘+3"))
        self.total_hours_slept.setPlaceholderText(_translate("MainWindow", "press opt+H to get total hours."))
        self.time_asleep.setDisplayFormat(_translate("MainWindow", "hh:mm AP"))
        self.label.setText(_translate("MainWindow", "time.asleep"))
        self.label_2.setText(_translate("MainWindow", "time.awake"))
        self.label_3.setText(_translate("MainWindow", "total.hrs.slept"))
        self.twenty_four_ounce_cup.setText(_translate("MainWindow", "24oz"))
        self.sixteen_ounce_cup.setText(_translate("MainWindow", "16oz"))
        self.eight_ounce_cup.setText(_translate("MainWindow", "8oz"))
        self.thirty_two_ounce_cup.setText(_translate("MainWindow", "32oz"))
        self.calories.setSuffix(_translate("MainWindow", " cal."))
        self.food_eaten.setToolTip(_translate("MainWindow", "Input food eaten or shake drank!"))
        self.food_eaten.setPlaceholderText(_translate("MainWindow", "What did I eat..."))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Awake and Time Asleep"))
        self.basics_date.setDisplayFormat(_translate("MainWindow", "yyyy/MM/dd"))
        self.diet_time.setDisplayFormat(_translate("MainWindow", "hh:mm:ss"))
        self.sleep_time.setDisplayFormat(_translate("MainWindow", "hh:mm:ss"))
        self.basics_time.setDisplayFormat(_translate("MainWindow", "hh:mm:ss"))
        self.sleep_date.setToolTip(_translate("MainWindow", "BASICS DATE"))
        self.sleep_date.setDisplayFormat(_translate("MainWindow", "yyyy/MM/dd"))
        self.diet_date.setDisplayFormat(_translate("MainWindow", "yyyy/MM/dd"))
        self.menubasicsMicro.setTitle(_translate("MainWindow", "basicsMicro"))
        self.menuData.setTitle(_translate("MainWindow", "datas"))
        self.menuviews.setTitle(_translate("MainWindow", "views"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionDelete.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.actionCommitSleep.setText(_translate("MainWindow", "Commit Sleep Data"))
        self.actionCommitSleep.setShortcut(_translate("MainWindow", "Meta+S"))
        self.actionCommitDiet.setText(_translate("MainWindow", "Commit Meal"))
        self.actionCommitDiet.setShortcut(_translate("MainWindow", "Meta+D"))
        self.actionTotalHours.setText(_translate("MainWindow", "Calculate Total Hours Slept"))
        self.actionTotalHours.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionShowPageOne.setText(_translate("MainWindow", "Input Panel"))
        self.actionShowPageOne.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionShowBasicsData.setText(_translate("MainWindow", "Basics Data"))
        self.actionShowBasicsData.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionShowSleepData.setText(_translate("MainWindow", "Sleep Data"))
        self.actionShowSleepData.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionShowDietData.setText(_translate("MainWindow", "Diet Data"))
        self.actionShowDietData.setShortcut(_translate("MainWindow", "Ctrl+4"))
